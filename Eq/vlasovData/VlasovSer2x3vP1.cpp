#include <VlasovModDecl.h> 
//#include <cstdio>
__host__ __device__ double VlasovVol2x3vSerP1(const int stride_f, const int stride_em, const double* __restrict__ w, const double* __restrict__ dxv, const double* __restrict__ EM, const double* __restrict__ f, double *out) 
{ 
// w[NDIM]: Cell-center coordinates. dxv[NDIM]: Cell spacing. EM/f: Input EM-field/distribution function. out: Incremented output 
//printf("%d %d\t%d %d\n", stride_f, stride_f, stride_em, stride_em);
  double dv0dx0 = dxv[2]/dxv[0]; 
  double w0dx0 = w[2]/dxv[0]; 
  double dv1dx1 = dxv[3]/dxv[1]; 
  double w1dx1 = w[3]/dxv[1]; 
  const double dv10 = 2/dxv[2]; 
  const double *E0 = &EM[stride_em*0]; 
  const double dv1 = dxv[2], wv1 = w[2]; 
  const double dv11 = 2/dxv[3]; 
  const double *E1 = &EM[stride_em*4]; 
  const double dv2 = dxv[3], wv2 = w[3]; 
  const double dv12 = 2/dxv[4]; 
  const double *E2 = &EM[stride_em*8]; 
  const double dv3 = dxv[4], wv3 = w[4]; 

  const double *B0 = &EM[stride_em*12]; 
  const double *B1 = &EM[stride_em*16]; 
  const double *B2 = &EM[stride_em*20]; 
  double alpha_mid = 0.0; 
  double alpha_cdim[64]; 
  double alpha_vdim[96]; 

  alpha_cdim[0] = 11.31370849898477*w0dx0; 
  alpha_cdim[3] = 3.265986323710906*dv0dx0; 
  alpha_mid += std::abs(w0dx0)+0.5*dv0dx0; 

  alpha_cdim[32] = 11.31370849898477*w1dx1; 
  alpha_cdim[36] = 3.265986323710906*dv1dx1; 
  alpha_mid += std::abs(w1dx1)+0.5*dv1dx1; 

  alpha_vdim[0] = dv10*(2.828427124746191*(B2[stride_em*0]*wv2+E0[stride_em*0])-2.828427124746191*B1[stride_em*0]*wv3); 
  alpha_vdim[1] = dv10*(2.828427124746191*(B2[stride_em*1]*wv2+E0[stride_em*1])-2.828427124746191*B1[stride_em*1]*wv3); 
  alpha_vdim[2] = dv10*(2.828427124746191*(B2[stride_em*2]*wv2+E0[stride_em*2])-2.828427124746191*B1[stride_em*2]*wv3); 
  alpha_vdim[4] = 0.8164965809277261*B2[stride_em*0]*dv10*dv2; 
  alpha_vdim[5] = -0.8164965809277261*B1[stride_em*0]*dv10*dv3; 
  alpha_vdim[6] = dv10*(2.828427124746191*(B2[stride_em*3]*wv2+E0[stride_em*3])-2.828427124746191*B1[stride_em*3]*wv3); 
  alpha_vdim[9] = 0.8164965809277261*B2[stride_em*1]*dv10*dv2; 
  alpha_vdim[10] = 0.8164965809277261*B2[stride_em*2]*dv10*dv2; 
  alpha_vdim[12] = -0.8164965809277261*B1[stride_em*1]*dv10*dv3; 
  alpha_vdim[13] = -0.8164965809277261*B1[stride_em*2]*dv10*dv3; 
  alpha_vdim[17] = 0.8164965809277261*B2[stride_em*3]*dv10*dv2; 
  alpha_vdim[20] = -0.8164965809277261*B1[stride_em*3]*dv10*dv3; 
  alpha_mid += std::abs(0.0883883476483184*alpha_vdim[0]); 

  alpha_vdim[32] = dv11*(2.828427124746191*B0[stride_em*0]*wv3-2.828427124746191*B2[stride_em*0]*wv1+2.828427124746191*E1[stride_em*0]); 
  alpha_vdim[33] = dv11*(2.828427124746191*B0[stride_em*1]*wv3-2.828427124746191*B2[stride_em*1]*wv1+2.828427124746191*E1[stride_em*1]); 
  alpha_vdim[34] = dv11*(2.828427124746191*B0[stride_em*2]*wv3-2.828427124746191*B2[stride_em*2]*wv1+2.828427124746191*E1[stride_em*2]); 
  alpha_vdim[35] = -0.8164965809277261*B2[stride_em*0]*dv1*dv11; 
  alpha_vdim[37] = 0.8164965809277261*B0[stride_em*0]*dv11*dv3; 
  alpha_vdim[38] = dv11*(2.828427124746191*B0[stride_em*3]*wv3-2.828427124746191*B2[stride_em*3]*wv1+2.828427124746191*E1[stride_em*3]); 
  alpha_vdim[39] = -0.8164965809277261*B2[stride_em*1]*dv1*dv11; 
  alpha_vdim[40] = -0.8164965809277261*B2[stride_em*2]*dv1*dv11; 
  alpha_vdim[44] = 0.8164965809277261*B0[stride_em*1]*dv11*dv3; 
  alpha_vdim[45] = 0.8164965809277261*B0[stride_em*2]*dv11*dv3; 
  alpha_vdim[48] = -0.8164965809277261*B2[stride_em*3]*dv1*dv11; 
  alpha_vdim[52] = 0.8164965809277261*B0[stride_em*3]*dv11*dv3; 
  alpha_mid += std::abs(0.0883883476483184*alpha_vdim[32]); 

  alpha_vdim[64] = dv12*(2.828427124746191*(B1[stride_em*0]*wv1+E2[stride_em*0])-2.828427124746191*B0[stride_em*0]*wv2); 
  alpha_vdim[65] = dv12*(2.828427124746191*(B1[stride_em*1]*wv1+E2[stride_em*1])-2.828427124746191*B0[stride_em*1]*wv2); 
  alpha_vdim[66] = dv12*(2.828427124746191*(B1[stride_em*2]*wv1+E2[stride_em*2])-2.828427124746191*B0[stride_em*2]*wv2); 
  alpha_vdim[67] = 0.8164965809277261*B1[stride_em*0]*dv1*dv12; 
  alpha_vdim[68] = -0.8164965809277261*B0[stride_em*0]*dv12*dv2; 
  alpha_vdim[70] = dv12*(2.828427124746191*(B1[stride_em*3]*wv1+E2[stride_em*3])-2.828427124746191*B0[stride_em*3]*wv2); 
  alpha_vdim[71] = 0.8164965809277261*B1[stride_em*1]*dv1*dv12; 
  alpha_vdim[72] = 0.8164965809277261*B1[stride_em*2]*dv1*dv12; 
  alpha_vdim[73] = -0.8164965809277261*B0[stride_em*1]*dv12*dv2; 
  alpha_vdim[74] = -0.8164965809277261*B0[stride_em*2]*dv12*dv2; 
  alpha_vdim[80] = 0.8164965809277261*B1[stride_em*3]*dv1*dv12; 
  alpha_vdim[81] = -0.8164965809277261*B0[stride_em*3]*dv12*dv2; 
  alpha_mid += std::abs(0.0883883476483184*alpha_vdim[64]); 

  out[stride_f*1] += 0.3061862178478971*(alpha_cdim[3]*f[stride_f*3]+alpha_cdim[0]*f[stride_f*0]); 
  out[stride_f*2] += 0.3061862178478971*(f[stride_f*4]*alpha_cdim[36]+f[stride_f*0]*alpha_cdim[32]); 
  out[stride_f*3] += 0.3061862178478971*(alpha_vdim[20]*f[stride_f*20]+alpha_vdim[17]*f[stride_f*17]+alpha_vdim[13]*f[stride_f*13]+alpha_vdim[12]*f[stride_f*12]+alpha_vdim[10]*f[stride_f*10]+alpha_vdim[9]*f[stride_f*9]+alpha_vdim[6]*f[stride_f*6]+alpha_vdim[5]*f[stride_f*5]+alpha_vdim[4]*f[stride_f*4]+alpha_vdim[2]*f[stride_f*2]+alpha_vdim[1]*f[stride_f*1]+alpha_vdim[0]*f[stride_f*0]); 
  out[stride_f*4] += 0.3061862178478971*(f[stride_f*20]*alpha_vdim[52]+f[stride_f*16]*alpha_vdim[48]+f[stride_f*13]*alpha_vdim[45]+f[stride_f*12]*alpha_vdim[44]+f[stride_f*8]*alpha_vdim[40]+f[stride_f*7]*alpha_vdim[39]+f[stride_f*6]*alpha_vdim[38]+f[stride_f*5]*alpha_vdim[37]+f[stride_f*3]*alpha_vdim[35]+f[stride_f*2]*alpha_vdim[34]+f[stride_f*1]*alpha_vdim[33]+f[stride_f*0]*alpha_vdim[32]); 
  out[stride_f*5] += 0.3061862178478971*(f[stride_f*17]*alpha_vdim[81]+f[stride_f*16]*alpha_vdim[80]+f[stride_f*10]*alpha_vdim[74]+f[stride_f*9]*alpha_vdim[73]+f[stride_f*8]*alpha_vdim[72]+f[stride_f*7]*alpha_vdim[71]+f[stride_f*6]*alpha_vdim[70]+f[stride_f*4]*alpha_vdim[68]+f[stride_f*3]*alpha_vdim[67]+f[stride_f*2]*alpha_vdim[66]+f[stride_f*1]*alpha_vdim[65]+f[stride_f*0]*alpha_vdim[64]); 
  out[stride_f*6] += 0.3061862178478971*(f[stride_f*9]*alpha_cdim[36]+f[stride_f*1]*alpha_cdim[32]+alpha_cdim[3]*f[stride_f*8]+alpha_cdim[0]*f[stride_f*2]); 
  out[stride_f*7] += 0.3061862178478971*(alpha_vdim[13]*f[stride_f*20]+f[stride_f*13]*alpha_vdim[20]+alpha_vdim[10]*f[stride_f*17]+f[stride_f*10]*alpha_vdim[17]+alpha_vdim[5]*f[stride_f*12]+f[stride_f*5]*alpha_vdim[12]+alpha_vdim[4]*f[stride_f*9]+f[stride_f*4]*alpha_vdim[9]+alpha_vdim[2]*f[stride_f*6]+f[stride_f*2]*alpha_vdim[6]+alpha_cdim[0]*f[stride_f*3]+f[stride_f*0]*alpha_cdim[3]+alpha_vdim[0]*f[stride_f*1]+f[stride_f*0]*alpha_vdim[1]); 
  out[stride_f*8] += 0.3061862178478971*(f[stride_f*11]*alpha_cdim[36]+f[stride_f*3]*alpha_cdim[32]+alpha_vdim[12]*f[stride_f*20]+f[stride_f*12]*alpha_vdim[20]+alpha_vdim[9]*f[stride_f*17]+f[stride_f*9]*alpha_vdim[17]+alpha_vdim[5]*f[stride_f*13]+f[stride_f*5]*alpha_vdim[13]+alpha_vdim[4]*f[stride_f*10]+f[stride_f*4]*alpha_vdim[10]+alpha_vdim[1]*f[stride_f*6]+f[stride_f*1]*alpha_vdim[6]+alpha_vdim[0]*f[stride_f*2]+f[stride_f*0]*alpha_vdim[2]); 
  out[stride_f*9] += 0.3061862178478971*(f[stride_f*13]*alpha_vdim[52]+f[stride_f*8]*alpha_vdim[48]+f[stride_f*20]*alpha_vdim[45]+f[stride_f*5]*alpha_vdim[44]+f[stride_f*16]*alpha_vdim[40]+f[stride_f*3]*alpha_vdim[39]+f[stride_f*2]*alpha_vdim[38]+f[stride_f*12]*alpha_vdim[37]+f[stride_f*7]*alpha_vdim[35]+f[stride_f*6]*alpha_vdim[34]+f[stride_f*0]*alpha_vdim[33]+f[stride_f*1]*alpha_vdim[32]+alpha_cdim[3]*f[stride_f*11]+alpha_cdim[0]*f[stride_f*4]); 
  out[stride_f*10] += 0.3061862178478971*(f[stride_f*12]*alpha_vdim[52]+f[stride_f*7]*alpha_vdim[48]+f[stride_f*5]*alpha_vdim[45]+f[stride_f*20]*alpha_vdim[44]+f[stride_f*3]*alpha_vdim[40]+f[stride_f*16]*alpha_vdim[39]+f[stride_f*1]*alpha_vdim[38]+f[stride_f*13]*alpha_vdim[37]+f[stride_f*0]*alpha_cdim[36]+f[stride_f*8]*alpha_vdim[35]+f[stride_f*0]*alpha_vdim[34]+f[stride_f*6]*alpha_vdim[33]+f[stride_f*2]*alpha_vdim[32]+f[stride_f*4]*alpha_cdim[32]); 
  out[stride_f*11] += 0.3061862178478971*(f[stride_f*27]*alpha_vdim[52]+f[stride_f*6]*alpha_vdim[48]+f[stride_f*22]*alpha_vdim[45]+f[stride_f*21]*alpha_vdim[44]+f[stride_f*2]*alpha_vdim[40]+f[stride_f*1]*alpha_vdim[39]+f[stride_f*16]*alpha_vdim[38]+f[stride_f*14]*alpha_vdim[37]+f[stride_f*0]*alpha_vdim[35]+f[stride_f*8]*alpha_vdim[34]+f[stride_f*7]*alpha_vdim[33]+f[stride_f*3]*alpha_vdim[32]+alpha_vdim[20]*f[stride_f*28]+alpha_vdim[13]*f[stride_f*24]+alpha_vdim[12]*f[stride_f*23]+alpha_vdim[6]*f[stride_f*17]+f[stride_f*6]*alpha_vdim[17]+alpha_vdim[5]*f[stride_f*15]+alpha_vdim[2]*f[stride_f*10]+f[stride_f*2]*alpha_vdim[10]+alpha_vdim[1]*f[stride_f*9]+f[stride_f*1]*alpha_vdim[9]+alpha_vdim[0]*f[stride_f*4]+f[stride_f*0]*alpha_vdim[4]); 
  out[stride_f*12] += 0.3061862178478971*(f[stride_f*10]*alpha_vdim[81]+f[stride_f*8]*alpha_vdim[80]+f[stride_f*17]*alpha_vdim[74]+f[stride_f*4]*alpha_vdim[73]+f[stride_f*16]*alpha_vdim[72]+f[stride_f*3]*alpha_vdim[71]+f[stride_f*2]*alpha_vdim[70]+f[stride_f*9]*alpha_vdim[68]+f[stride_f*7]*alpha_vdim[67]+f[stride_f*6]*alpha_vdim[66]+f[stride_f*0]*alpha_vdim[65]+f[stride_f*1]*alpha_vdim[64]+alpha_cdim[3]*f[stride_f*14]+alpha_cdim[0]*f[stride_f*5]); 
  out[stride_f*13] += 0.3061862178478971*(f[stride_f*9]*alpha_vdim[81]+f[stride_f*7]*alpha_vdim[80]+f[stride_f*4]*alpha_vdim[74]+f[stride_f*17]*alpha_vdim[73]+f[stride_f*3]*alpha_vdim[72]+f[stride_f*16]*alpha_vdim[71]+f[stride_f*1]*alpha_vdim[70]+f[stride_f*10]*alpha_vdim[68]+f[stride_f*8]*alpha_vdim[67]+f[stride_f*0]*alpha_vdim[66]+f[stride_f*6]*alpha_vdim[65]+f[stride_f*2]*alpha_vdim[64]+f[stride_f*15]*alpha_cdim[36]+f[stride_f*5]*alpha_cdim[32]); 
  out[stride_f*14] += 0.3061862178478971*(f[stride_f*26]*alpha_vdim[81]+f[stride_f*6]*alpha_vdim[80]+f[stride_f*19]*alpha_vdim[74]+f[stride_f*18]*alpha_vdim[73]+f[stride_f*2]*alpha_vdim[72]+f[stride_f*1]*alpha_vdim[71]+f[stride_f*16]*alpha_vdim[70]+f[stride_f*11]*alpha_vdim[68]+f[stride_f*0]*alpha_vdim[67]+f[stride_f*8]*alpha_vdim[66]+f[stride_f*7]*alpha_vdim[65]+f[stride_f*3]*alpha_vdim[64]+alpha_vdim[17]*f[stride_f*28]+alpha_vdim[10]*f[stride_f*24]+alpha_vdim[9]*f[stride_f*23]+alpha_vdim[6]*f[stride_f*20]+f[stride_f*6]*alpha_vdim[20]+alpha_vdim[4]*f[stride_f*15]+alpha_vdim[2]*f[stride_f*13]+f[stride_f*2]*alpha_vdim[13]+alpha_vdim[1]*f[stride_f*12]+f[stride_f*1]*alpha_vdim[12]+alpha_vdim[0]*f[stride_f*5]+f[stride_f*0]*alpha_vdim[5]); 
  out[stride_f*15] += 0.3061862178478971*(f[stride_f*6]*alpha_vdim[81]+f[stride_f*26]*alpha_vdim[80]+f[stride_f*2]*alpha_vdim[74]+f[stride_f*1]*alpha_vdim[73]+f[stride_f*19]*alpha_vdim[72]+f[stride_f*18]*alpha_vdim[71]+f[stride_f*17]*alpha_vdim[70]+f[stride_f*0]*alpha_vdim[68]+f[stride_f*11]*alpha_vdim[67]+f[stride_f*10]*alpha_vdim[66]+f[stride_f*9]*alpha_vdim[65]+f[stride_f*4]*alpha_vdim[64]+f[stride_f*6]*alpha_vdim[52]+f[stride_f*27]*alpha_vdim[48]+f[stride_f*2]*alpha_vdim[45]+f[stride_f*1]*alpha_vdim[44]+f[stride_f*22]*alpha_vdim[40]+f[stride_f*21]*alpha_vdim[39]+f[stride_f*20]*alpha_vdim[38]+f[stride_f*0]*alpha_vdim[37]+f[stride_f*14]*alpha_vdim[35]+f[stride_f*13]*alpha_vdim[34]+f[stride_f*12]*alpha_vdim[33]+f[stride_f*5]*alpha_vdim[32]); 
  out[stride_f*16] += 0.3061862178478971*(f[stride_f*18]*alpha_cdim[36]+f[stride_f*7]*alpha_cdim[32]+alpha_vdim[5]*f[stride_f*20]+f[stride_f*5]*alpha_vdim[20]+alpha_vdim[4]*f[stride_f*17]+f[stride_f*4]*alpha_vdim[17]+alpha_vdim[12]*f[stride_f*13]+f[stride_f*12]*alpha_vdim[13]+alpha_vdim[9]*f[stride_f*10]+f[stride_f*9]*alpha_vdim[10]+alpha_cdim[0]*f[stride_f*8]+alpha_vdim[0]*f[stride_f*6]+f[stride_f*0]*alpha_vdim[6]+f[stride_f*2]*(alpha_cdim[3]+alpha_vdim[1])+f[stride_f*1]*alpha_vdim[2]); 
  out[stride_f*17] += 0.3061862178478971*(f[stride_f*5]*alpha_vdim[52]+f[stride_f*3]*alpha_vdim[48]+f[stride_f*12]*alpha_vdim[45]+f[stride_f*13]*alpha_vdim[44]+f[stride_f*7]*alpha_vdim[40]+f[stride_f*8]*alpha_vdim[39]+f[stride_f*0]*alpha_vdim[38]+f[stride_f*20]*alpha_vdim[37]+f[stride_f*1]*alpha_cdim[36]+f[stride_f*16]*alpha_vdim[35]+f[stride_f*1]*alpha_vdim[34]+f[stride_f*2]*alpha_vdim[33]+f[stride_f*6]*alpha_vdim[32]+f[stride_f*9]*alpha_cdim[32]+alpha_cdim[3]*f[stride_f*19]+alpha_cdim[0]*f[stride_f*10]); 
  out[stride_f*18] += 0.3061862178478971*(f[stride_f*22]*alpha_vdim[52]+f[stride_f*2]*alpha_vdim[48]+f[stride_f*27]*alpha_vdim[45]+f[stride_f*14]*alpha_vdim[44]+f[stride_f*6]*alpha_vdim[40]+f[stride_f*0]*alpha_vdim[39]+f[stride_f*8]*alpha_vdim[38]+f[stride_f*21]*alpha_vdim[37]+f[stride_f*1]*alpha_vdim[35]+f[stride_f*16]*alpha_vdim[34]+f[stride_f*3]*alpha_vdim[33]+f[stride_f*7]*alpha_vdim[32]+alpha_vdim[13]*f[stride_f*28]+alpha_vdim[20]*f[stride_f*24]+alpha_vdim[5]*f[stride_f*23]+alpha_vdim[2]*f[stride_f*17]+f[stride_f*2]*alpha_vdim[17]+alpha_vdim[12]*f[stride_f*15]+alpha_cdim[0]*f[stride_f*11]+alpha_vdim[6]*f[stride_f*10]+f[stride_f*6]*alpha_vdim[10]+alpha_vdim[0]*f[stride_f*9]+f[stride_f*0]*alpha_vdim[9]+(alpha_cdim[3]+alpha_vdim[1])*f[stride_f*4]+f[stride_f*1]*alpha_vdim[4]); 
  out[stride_f*19] += 0.3061862178478971*(f[stride_f*21]*alpha_vdim[52]+f[stride_f*1]*alpha_vdim[48]+f[stride_f*14]*alpha_vdim[45]+f[stride_f*27]*alpha_vdim[44]+f[stride_f*0]*alpha_vdim[40]+f[stride_f*6]*alpha_vdim[39]+f[stride_f*7]*alpha_vdim[38]+f[stride_f*22]*alpha_vdim[37]+f[stride_f*3]*alpha_cdim[36]+f[stride_f*2]*alpha_vdim[35]+f[stride_f*3]*alpha_vdim[34]+f[stride_f*16]*alpha_vdim[33]+f[stride_f*8]*alpha_vdim[32]+f[stride_f*11]*alpha_cdim[32]+alpha_vdim[12]*f[stride_f*28]+alpha_vdim[5]*f[stride_f*24]+alpha_vdim[20]*f[stride_f*23]+alpha_vdim[1]*f[stride_f*17]+f[stride_f*1]*alpha_vdim[17]+alpha_vdim[13]*f[stride_f*15]+alpha_vdim[0]*f[stride_f*10]+f[stride_f*0]*alpha_vdim[10]+alpha_vdim[6]*f[stride_f*9]+f[stride_f*6]*alpha_vdim[9]+alpha_vdim[2]*f[stride_f*4]+f[stride_f*2]*alpha_vdim[4]); 
  out[stride_f*20] += 0.3061862178478971*(f[stride_f*4]*alpha_vdim[81]+f[stride_f*3]*alpha_vdim[80]+f[stride_f*9]*alpha_vdim[74]+f[stride_f*10]*alpha_vdim[73]+f[stride_f*7]*alpha_vdim[72]+f[stride_f*8]*alpha_vdim[71]+f[stride_f*0]*alpha_vdim[70]+f[stride_f*17]*alpha_vdim[68]+f[stride_f*16]*alpha_vdim[67]+f[stride_f*1]*alpha_vdim[66]+f[stride_f*2]*alpha_vdim[65]+f[stride_f*6]*alpha_vdim[64]+f[stride_f*23]*alpha_cdim[36]+f[stride_f*12]*alpha_cdim[32]+alpha_cdim[3]*f[stride_f*22]+alpha_cdim[0]*f[stride_f*13]); 
  out[stride_f*21] += 0.3061862178478971*(f[stride_f*19]*alpha_vdim[81]+f[stride_f*2]*alpha_vdim[80]+f[stride_f*26]*alpha_vdim[74]+f[stride_f*11]*alpha_vdim[73]+f[stride_f*6]*alpha_vdim[72]+f[stride_f*0]*alpha_vdim[71]+f[stride_f*8]*alpha_vdim[70]+f[stride_f*18]*alpha_vdim[68]+f[stride_f*1]*alpha_vdim[67]+f[stride_f*16]*alpha_vdim[66]+f[stride_f*3]*alpha_vdim[65]+f[stride_f*7]*alpha_vdim[64]+alpha_vdim[10]*f[stride_f*28]+alpha_vdim[17]*f[stride_f*24]+alpha_vdim[4]*f[stride_f*23]+alpha_vdim[2]*f[stride_f*20]+f[stride_f*2]*alpha_vdim[20]+alpha_vdim[9]*f[stride_f*15]+alpha_cdim[0]*f[stride_f*14]+alpha_vdim[6]*f[stride_f*13]+f[stride_f*6]*alpha_vdim[13]+alpha_vdim[0]*f[stride_f*12]+f[stride_f*0]*alpha_vdim[12]+(alpha_cdim[3]+alpha_vdim[1])*f[stride_f*5]+f[stride_f*1]*alpha_vdim[5]); 
  out[stride_f*22] += 0.3061862178478971*(f[stride_f*18]*alpha_vdim[81]+f[stride_f*1]*alpha_vdim[80]+f[stride_f*11]*alpha_vdim[74]+f[stride_f*26]*alpha_vdim[73]+f[stride_f*0]*alpha_vdim[72]+f[stride_f*6]*alpha_vdim[71]+f[stride_f*7]*alpha_vdim[70]+f[stride_f*19]*alpha_vdim[68]+f[stride_f*2]*alpha_vdim[67]+f[stride_f*3]*alpha_vdim[66]+f[stride_f*16]*alpha_vdim[65]+f[stride_f*8]*alpha_vdim[64]+f[stride_f*25]*alpha_cdim[36]+f[stride_f*14]*alpha_cdim[32]+alpha_vdim[9]*f[stride_f*28]+alpha_vdim[4]*f[stride_f*24]+alpha_vdim[17]*f[stride_f*23]+alpha_vdim[1]*f[stride_f*20]+f[stride_f*1]*alpha_vdim[20]+alpha_vdim[10]*f[stride_f*15]+alpha_vdim[0]*f[stride_f*13]+f[stride_f*0]*alpha_vdim[13]+alpha_vdim[6]*f[stride_f*12]+f[stride_f*6]*alpha_vdim[12]+alpha_vdim[2]*f[stride_f*5]+f[stride_f*2]*alpha_vdim[5]); 
  out[stride_f*23] += 0.3061862178478971*(f[stride_f*2]*alpha_vdim[81]+f[stride_f*19]*alpha_vdim[80]+f[stride_f*6]*alpha_vdim[74]+f[stride_f*0]*alpha_vdim[73]+f[stride_f*26]*alpha_vdim[72]+f[stride_f*11]*alpha_vdim[71]+f[stride_f*10]*alpha_vdim[70]+f[stride_f*1]*alpha_vdim[68]+f[stride_f*18]*alpha_vdim[67]+f[stride_f*17]*alpha_vdim[66]+f[stride_f*4]*alpha_vdim[65]+f[stride_f*9]*alpha_vdim[64]+f[stride_f*2]*alpha_vdim[52]+f[stride_f*22]*alpha_vdim[48]+f[stride_f*6]*alpha_vdim[45]+f[stride_f*0]*alpha_vdim[44]+f[stride_f*27]*alpha_vdim[40]+f[stride_f*14]*alpha_vdim[39]+f[stride_f*13]*alpha_vdim[38]+f[stride_f*1]*alpha_vdim[37]+f[stride_f*21]*alpha_vdim[35]+f[stride_f*20]*alpha_vdim[34]+f[stride_f*5]*alpha_vdim[33]+f[stride_f*12]*alpha_vdim[32]+alpha_cdim[3]*f[stride_f*25]+alpha_cdim[0]*f[stride_f*15]); 
  out[stride_f*24] += 0.3061862178478971*(f[stride_f*1]*alpha_vdim[81]+f[stride_f*18]*alpha_vdim[80]+f[stride_f*0]*alpha_vdim[74]+f[stride_f*6]*alpha_vdim[73]+f[stride_f*11]*alpha_vdim[72]+f[stride_f*26]*alpha_vdim[71]+f[stride_f*9]*alpha_vdim[70]+f[stride_f*2]*alpha_vdim[68]+f[stride_f*19]*alpha_vdim[67]+f[stride_f*4]*alpha_vdim[66]+f[stride_f*17]*alpha_vdim[65]+f[stride_f*10]*alpha_vdim[64]+f[stride_f*1]*alpha_vdim[52]+f[stride_f*21]*alpha_vdim[48]+f[stride_f*0]*alpha_vdim[45]+f[stride_f*6]*alpha_vdim[44]+f[stride_f*14]*alpha_vdim[40]+f[stride_f*27]*alpha_vdim[39]+f[stride_f*12]*alpha_vdim[38]+f[stride_f*2]*alpha_vdim[37]+f[stride_f*5]*alpha_cdim[36]+f[stride_f*22]*alpha_vdim[35]+f[stride_f*5]*alpha_vdim[34]+f[stride_f*20]*alpha_vdim[33]+f[stride_f*13]*alpha_vdim[32]+f[stride_f*15]*alpha_cdim[32]); 
  out[stride_f*25] += 0.3061862178478971*(f[stride_f*16]*alpha_vdim[81]+f[stride_f*17]*alpha_vdim[80]+f[stride_f*8]*alpha_vdim[74]+f[stride_f*7]*alpha_vdim[73]+f[stride_f*10]*alpha_vdim[72]+f[stride_f*9]*alpha_vdim[71]+f[stride_f*26]*alpha_vdim[70]+f[stride_f*3]*alpha_vdim[68]+f[stride_f*4]*alpha_vdim[67]+f[stride_f*19]*alpha_vdim[66]+f[stride_f*18]*alpha_vdim[65]+f[stride_f*11]*alpha_vdim[64]+f[stride_f*16]*alpha_vdim[52]+f[stride_f*20]*alpha_vdim[48]+f[stride_f*8]*alpha_vdim[45]+f[stride_f*7]*alpha_vdim[44]+f[stride_f*13]*alpha_vdim[40]+f[stride_f*12]*alpha_vdim[39]+f[stride_f*27]*alpha_vdim[38]+f[stride_f*3]*alpha_vdim[37]+f[stride_f*5]*alpha_vdim[35]+f[stride_f*22]*alpha_vdim[34]+f[stride_f*21]*alpha_vdim[33]+f[stride_f*14]*alpha_vdim[32]+alpha_vdim[6]*f[stride_f*28]+alpha_vdim[2]*f[stride_f*24]+alpha_vdim[1]*f[stride_f*23]+alpha_vdim[17]*f[stride_f*20]+f[stride_f*17]*alpha_vdim[20]+alpha_vdim[0]*f[stride_f*15]+alpha_vdim[10]*f[stride_f*13]+f[stride_f*10]*alpha_vdim[13]+alpha_vdim[9]*f[stride_f*12]+f[stride_f*9]*alpha_vdim[12]+alpha_vdim[4]*f[stride_f*5]+f[stride_f*4]*alpha_vdim[5]); 
  out[stride_f*26] += 0.3061862178478971*(f[stride_f*14]*alpha_vdim[52]+f[stride_f*0]*alpha_vdim[48]+f[stride_f*21]*alpha_vdim[45]+f[stride_f*22]*alpha_vdim[44]+f[stride_f*1]*alpha_vdim[40]+f[stride_f*2]*alpha_vdim[39]+f[stride_f*3]*alpha_vdim[38]+f[stride_f*27]*alpha_vdim[37]+f[stride_f*7]*alpha_cdim[36]+f[stride_f*6]*alpha_vdim[35]+f[stride_f*7]*alpha_vdim[34]+f[stride_f*8]*alpha_vdim[33]+f[stride_f*16]*alpha_vdim[32]+f[stride_f*18]*alpha_cdim[32]+alpha_vdim[5]*f[stride_f*28]+alpha_vdim[12]*f[stride_f*24]+alpha_vdim[13]*f[stride_f*23]+f[stride_f*15]*alpha_vdim[20]+alpha_cdim[0]*f[stride_f*19]+alpha_vdim[0]*f[stride_f*17]+f[stride_f*0]*alpha_vdim[17]+(alpha_cdim[3]+alpha_vdim[1])*f[stride_f*10]+f[stride_f*1]*alpha_vdim[10]+alpha_vdim[2]*f[stride_f*9]+f[stride_f*2]*alpha_vdim[9]+alpha_vdim[4]*f[stride_f*6]+f[stride_f*4]*alpha_vdim[6]); 
  out[stride_f*27] += 0.3061862178478971*(f[stride_f*11]*alpha_vdim[81]+f[stride_f*0]*alpha_vdim[80]+f[stride_f*18]*alpha_vdim[74]+f[stride_f*19]*alpha_vdim[73]+f[stride_f*1]*alpha_vdim[72]+f[stride_f*2]*alpha_vdim[71]+f[stride_f*3]*alpha_vdim[70]+f[stride_f*26]*alpha_vdim[68]+f[stride_f*6]*alpha_vdim[67]+f[stride_f*7]*alpha_vdim[66]+f[stride_f*8]*alpha_vdim[65]+f[stride_f*16]*alpha_vdim[64]+f[stride_f*29]*alpha_cdim[36]+f[stride_f*21]*alpha_cdim[32]+alpha_vdim[4]*f[stride_f*28]+alpha_vdim[9]*f[stride_f*24]+alpha_vdim[10]*f[stride_f*23]+alpha_cdim[0]*f[stride_f*22]+alpha_vdim[0]*f[stride_f*20]+f[stride_f*0]*alpha_vdim[20]+f[stride_f*15]*alpha_vdim[17]+(alpha_cdim[3]+alpha_vdim[1])*f[stride_f*13]+f[stride_f*1]*alpha_vdim[13]+alpha_vdim[2]*f[stride_f*12]+f[stride_f*2]*alpha_vdim[12]+alpha_vdim[5]*f[stride_f*6]+f[stride_f*5]*alpha_vdim[6]); 
  out[stride_f*28] += 0.3061862178478971*(f[stride_f*0]*alpha_vdim[81]+f[stride_f*11]*alpha_vdim[80]+f[stride_f*1]*alpha_vdim[74]+f[stride_f*2]*alpha_vdim[73]+f[stride_f*18]*alpha_vdim[72]+f[stride_f*19]*alpha_vdim[71]+f[stride_f*4]*alpha_vdim[70]+f[stride_f*6]*alpha_vdim[68]+f[stride_f*26]*alpha_vdim[67]+f[stride_f*9]*alpha_vdim[66]+f[stride_f*10]*alpha_vdim[65]+f[stride_f*17]*alpha_vdim[64]+f[stride_f*0]*alpha_vdim[52]+f[stride_f*14]*alpha_vdim[48]+f[stride_f*1]*alpha_vdim[45]+f[stride_f*2]*alpha_vdim[44]+f[stride_f*21]*alpha_vdim[40]+f[stride_f*22]*alpha_vdim[39]+f[stride_f*5]*alpha_vdim[38]+f[stride_f*6]*alpha_vdim[37]+f[stride_f*12]*alpha_cdim[36]+f[stride_f*27]*alpha_vdim[35]+f[stride_f*12]*alpha_vdim[34]+f[stride_f*13]*alpha_vdim[33]+f[stride_f*20]*alpha_vdim[32]+f[stride_f*23]*alpha_cdim[32]+alpha_cdim[3]*f[stride_f*30]+alpha_cdim[0]*f[stride_f*24]); 
  out[stride_f*29] += 0.3061862178478971*(f[stride_f*8]*alpha_vdim[81]+f[stride_f*10]*alpha_vdim[80]+f[stride_f*16]*alpha_vdim[74]+f[stride_f*3]*alpha_vdim[73]+f[stride_f*17]*alpha_vdim[72]+f[stride_f*4]*alpha_vdim[71]+f[stride_f*19]*alpha_vdim[70]+f[stride_f*7]*alpha_vdim[68]+f[stride_f*9]*alpha_vdim[67]+f[stride_f*26]*alpha_vdim[66]+f[stride_f*11]*alpha_vdim[65]+f[stride_f*18]*alpha_vdim[64]+f[stride_f*8]*alpha_vdim[52]+f[stride_f*13]*alpha_vdim[48]+f[stride_f*16]*alpha_vdim[45]+f[stride_f*3]*alpha_vdim[44]+f[stride_f*20]*alpha_vdim[40]+f[stride_f*5]*alpha_vdim[39]+f[stride_f*22]*alpha_vdim[38]+f[stride_f*7]*alpha_vdim[37]+f[stride_f*12]*alpha_vdim[35]+f[stride_f*27]*alpha_vdim[34]+f[stride_f*14]*alpha_vdim[33]+f[stride_f*21]*alpha_vdim[32]+alpha_vdim[2]*f[stride_f*28]+alpha_cdim[0]*f[stride_f*25]+alpha_vdim[6]*f[stride_f*24]+alpha_vdim[0]*f[stride_f*23]+alpha_vdim[10]*f[stride_f*20]+f[stride_f*10]*alpha_vdim[20]+alpha_vdim[13]*f[stride_f*17]+f[stride_f*13]*alpha_vdim[17]+(alpha_cdim[3]+alpha_vdim[1])*f[stride_f*15]+alpha_vdim[4]*f[stride_f*12]+f[stride_f*4]*alpha_vdim[12]+alpha_vdim[5]*f[stride_f*9]+f[stride_f*5]*alpha_vdim[9]); 
  out[stride_f*30] += 0.3061862178478971*(f[stride_f*7]*alpha_vdim[81]+f[stride_f*9]*alpha_vdim[80]+f[stride_f*3]*alpha_vdim[74]+f[stride_f*16]*alpha_vdim[73]+f[stride_f*4]*alpha_vdim[72]+f[stride_f*17]*alpha_vdim[71]+f[stride_f*18]*alpha_vdim[70]+f[stride_f*8]*alpha_vdim[68]+f[stride_f*10]*alpha_vdim[67]+f[stride_f*11]*alpha_vdim[66]+f[stride_f*26]*alpha_vdim[65]+f[stride_f*19]*alpha_vdim[64]+f[stride_f*7]*alpha_vdim[52]+f[stride_f*12]*alpha_vdim[48]+f[stride_f*3]*alpha_vdim[45]+f[stride_f*16]*alpha_vdim[44]+f[stride_f*5]*alpha_vdim[40]+f[stride_f*20]*alpha_vdim[39]+f[stride_f*21]*alpha_vdim[38]+f[stride_f*8]*alpha_vdim[37]+f[stride_f*14]*alpha_cdim[36]+f[stride_f*13]*alpha_vdim[35]+f[stride_f*14]*alpha_vdim[34]+f[stride_f*27]*alpha_vdim[33]+f[stride_f*22]*alpha_vdim[32]+f[stride_f*25]*alpha_cdim[32]+alpha_vdim[1]*f[stride_f*28]+alpha_vdim[0]*f[stride_f*24]+alpha_vdim[6]*f[stride_f*23]+alpha_vdim[9]*f[stride_f*20]+f[stride_f*9]*alpha_vdim[20]+alpha_vdim[12]*f[stride_f*17]+f[stride_f*12]*alpha_vdim[17]+alpha_vdim[2]*f[stride_f*15]+alpha_vdim[4]*f[stride_f*13]+f[stride_f*4]*alpha_vdim[13]+alpha_vdim[5]*f[stride_f*10]+f[stride_f*5]*alpha_vdim[10]); 
  out[stride_f*31] += 0.3061862178478971*(f[stride_f*3]*alpha_vdim[81]+f[stride_f*4]*alpha_vdim[80]+f[stride_f*7]*alpha_vdim[74]+f[stride_f*8]*alpha_vdim[73]+f[stride_f*9]*alpha_vdim[72]+f[stride_f*10]*alpha_vdim[71]+f[stride_f*11]*alpha_vdim[70]+f[stride_f*16]*alpha_vdim[68]+f[stride_f*17]*alpha_vdim[67]+f[stride_f*18]*alpha_vdim[66]+f[stride_f*19]*alpha_vdim[65]+f[stride_f*26]*alpha_vdim[64]+f[stride_f*3]*alpha_vdim[52]+f[stride_f*5]*alpha_vdim[48]+f[stride_f*7]*alpha_vdim[45]+f[stride_f*8]*alpha_vdim[44]+f[stride_f*12]*alpha_vdim[40]+f[stride_f*13]*alpha_vdim[39]+f[stride_f*14]*alpha_vdim[38]+f[stride_f*16]*alpha_vdim[37]+f[stride_f*21]*alpha_cdim[36]+f[stride_f*20]*alpha_vdim[35]+f[stride_f*21]*alpha_vdim[34]+f[stride_f*22]*alpha_vdim[33]+f[stride_f*27]*alpha_vdim[32]+f[stride_f*29]*alpha_cdim[32]+alpha_cdim[0]*f[stride_f*30]+alpha_vdim[0]*f[stride_f*28]+(alpha_cdim[3]+alpha_vdim[1])*f[stride_f*24]+alpha_vdim[2]*f[stride_f*23]+alpha_vdim[4]*f[stride_f*20]+f[stride_f*4]*alpha_vdim[20]+alpha_vdim[5]*f[stride_f*17]+f[stride_f*5]*alpha_vdim[17]+alpha_vdim[6]*f[stride_f*15]+alpha_vdim[9]*f[stride_f*13]+f[stride_f*9]*alpha_vdim[13]+alpha_vdim[10]*f[stride_f*12]+f[stride_f*10]*alpha_vdim[12]); 

  return alpha_mid; 
} 
